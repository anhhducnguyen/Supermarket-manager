<UserControl x:Class="Login.Views.SanPhamView_NV"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:local="clr-namespace:Login.Views"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="950" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="#DAE2EA"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" CornerRadius="3" Padding="1" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#9575CD"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#9575CD"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="gridEditButton" TargetType="Button">
            <Setter Property="Background" Value="#512DA8" />
            <Setter Property="BorderBrush" Value="#4A148C" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#673AB7" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
            <Setter Property="Background" Value="#D32F2F" />
            <Setter Property="BorderBrush" Value="#B71C1C" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F44336" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="gridAddButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
            <Setter Property="Background" Value="Blue" />
            <Setter Property="BorderBrush" Value="DarkBlue" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="BlueViolet" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="gridButtonIcon" TargetType="fa:IconImage">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="12" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="reloadButtonIcon" TargetType="fa:IconImage">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="15" />
            <Setter Property="Height" Value="15" />
            <Setter Property="Foreground" Value="White"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="btnDelete" Grid.Column="2" Visibility="Hidden"
                            Command="{Binding LoginCommand}"                            
                            Content="Xoá"                            
                            FontSize="12"
                            FontFamily="Montserrat"
                            Cursor="Hand"
                            BorderThickness="0"
                            Foreground="White"
                    VerticalAlignment="Top"
                    Click="btnDelete_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#773DFF"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Height="30"
                                                    CornerRadius="15"
                                                    Background="{TemplateBinding Background}">
                                        <ContentPresenter VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#836EFB"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center"
                        Grid.Column="4">
                <fa:IconImage Icon="Search" Height="20" Width="20" Foreground="#1099ff"/>
                <TextBox x:Name="tbnSearch" Text="Search..."  
                    FontSize="13"
                         Height="24"
                           Width="300"
                           Background="Transparent"
                             FontWeight="Medium"
                             FontFamily="Montserrat"                            
                             Foreground="Gray"
                             CaretBrush="#1099ff"
                             BorderBrush="Gray"
                             BorderThickness="0,0,0,1"                             
                             VerticalContentAlignment="Center"
                             Margin="5,5,0,0" TextChanged="tbnSearch_TextChanged" GotFocus="tbnSearch_GotFocus"/>
            </StackPanel>
            <Button Grid.Column="5" x:Name="btnSearch"
                            Command="{Binding LoginCommand}"                            
                            Content="Tìm kiếm"                            
                            FontSize="12"
                            FontFamily="Montserrat"
                            Cursor="Hand"
                            BorderThickness="0"
                            Foreground="White"
                    VerticalAlignment="Center"
                    Click="btnSearch_Click" Width="90">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#0072BC"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Height="30"
                                                    CornerRadius="5"
                                                    Background="{TemplateBinding Background}">
                                        <ContentPresenter VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005389"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="5" x:Name="btnReLoad"
                            BorderThickness="0"
                            Foreground="White"
                    VerticalAlignment="Center"
                    Click="btnReLoad_Click" Grid.ColumnSpan="2" Margin="110,0,10,0">
                <fa:IconImage Icon="Rotate" Style="{StaticResource reloadButtonIcon}"/>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#0072BC"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Height="30" Width="30"
                                                    CornerRadius="15"
                                                    Background="{TemplateBinding Background}">
                                        <ContentPresenter VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005389"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Border Grid.Row="1"
                Background="#F0F8FF" 
                CornerRadius="10" 
                Padding="10">
            <DataGrid
                Style="{DynamicResource DataGridStyle1}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}"
                x:Name="dgProduct" AutoGenerateColumns="False" RowHeaderWidth="0" GridLinesVisibility="None" ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  Background="#F0F8FF" ItemsSource="{Binding products}" CanUserAddRows="False"
                  BorderThickness="0" SelectionChanged="DataGrid_SelectionChanged">

                <DataGrid.Columns>
                    <DataGridTemplateColumn CanUserResize="False" Width="Auto">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox Style="{StaticResource CheckBoxStyle1}" x:Name="chkSelectAll" IsChecked="{Binding IsAllSelected}" Checked="chkSelectAll_Checked" Unchecked="chkSelectAll_Unchecked"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Unchecked="CheckBox_Unchecked" Checked="CheckBox_Checked" Style="{StaticResource CheckBoxStyle1}" IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Mã Sản Phẩm" IsReadOnly="True" CanUserResize="False" Width="110" Binding="{Binding MaSP}"/>
                    <DataGridTextColumn Header="Tên Sản Phẩm" IsReadOnly="True" CanUserResize="False" Width="140" Binding="{Binding TenSP}"/>
                    <DataGridTextColumn Header="Mã Nhóm" IsReadOnly="True" CanUserResize="False" Width="90" Binding="{Binding MaNhom}"/>
                    <DataGridTextColumn Header="Mã NCC" IsReadOnly="True" CanUserResize="False" Width="80" Binding="{Binding MaNCC}"/>
                    <DataGridTextColumn Header="Số Lượng" IsReadOnly="True" CanUserResize="False" Width="85" Binding="{Binding SoLuong}"/>
                    <DataGridTextColumn Header="Giá Bán" IsReadOnly="True" CanUserResize="False" Width="80" Binding="{Binding DonGia}"/>
                    <DataGridTextColumn Header="Ngày Sản Xuất" IsReadOnly="True" CanUserResize="False" Width="120" Binding="{Binding NSX.Date, StringFormat=dd/MM/yyyy}"/>
                    <DataGridTextColumn Header="Hạn Sử Dụng" IsReadOnly="True" CanUserResize="False" Width="110" Binding="{Binding HSD.Date, StringFormat=dd/MM/yyyy}"/>
                    <DataGridTemplateColumn Header="" IsReadOnly="True" Width="125">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>
    </Grid>
</UserControl>
